logging.level.com.rabbitmq.authorization_server: "debug"

server:
  port: 8443
  ssl:
    bundle: spring-authorizationserver

spring:
  ssl:
    bundle:
      jks:
        spring-authorizationserver:
          key:
            alias: server-spring-tls
            password: foobar
          keystore:
            location: /config/server_spring.jks
            password: foobar
            type: PKCS12
  security:
    oauth2:
      users:
        - username: rabbitmq_management
          password: rabbitmq_management 
          scopes: 
            - rabbitmq.read:*/*
            - rabbitmq.write:*/*
            - rabbitmq.configure:*/*
            - rabbitmq.tag:management
          audiencies: 
            - rabbitmq
        - username: rabbit_no_management
          password: rabbit_no_management 
          scopes: 
            - rabbitmq.read:*/*            
          audiencies: 
            - rabbitmq
        - username: rabbit_admin
          password: rabbit_admin 
          scopes: 
            - rabbitmq.tag:administrator
          audiencies: 
            - rabbitmq
      authorizationserver:
        client:
          introspection_client:
            registration:
              provider: spring
              client-id: introspection_client
              client-secret: "{noop}introspection_client"
              authorization-grant-types: 
                - client_credentials
              client-authentication-methods:
                - client_secret_basic              
              client-name: introspection_client            
          mgt_api_client_opaque:
            registration:
              provider: spring
              client-id: mgt_api_client_opaque
              client-secret: "{noop}mgt_api_client_opaque"
              authorization-grant-types: 
                - client_credentials
              client-authentication-methods:
                - client_secret_basic
              scopes: 
                - openid
                - profile               
              client-name: mgt_api_client_opaque
            token:
              access-token-format: reference    
          producer_opaque:
            registration:
              provider: spring
              client-id: producer_opaque
              client-secret: "{noop}producer_opaque"
              authorization-grant-types: 
                - client_credentials
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
              scopes: 
                - openid
                - profile            
                - rabbitmq.read:*/*
                - rabbitmq.write:*/*
                - rabbitmq.configure:*/*   
              client-name: producer_opaque
            token:
              access-token-format: reference                            
          producer:
            registration:
              provider: spring
              client-id: producer
              client-secret: "{noop}producer"
              authorization-grant-types: 
                - client_credentials
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
              scopes: 
                - openid
                - profile            
                - rabbitmq.read:*/*
                - rabbitmq.write:*/*
                - rabbitmq.configure:*/*            
              client-name: producer            
          rabbit_idp_user:
            registration:
              provider: spring
              client-id: rabbit_idp_user
              client-secret: "{noop}rabbit_idp_user"
              authorization-grant-types: 
                - client_credentials
              client-authentication-methods:
                - client_secret_basic
                - client_secret_post
              scopes: 
                - openid
                - profile
                - rabbitmq.tag:management
                - rabbitmq.tag:administrator
              client-name: rabbit_idp_user
              audiencies:
                - rabbitmq
            token:
              access-token-format: reference
          mgt_api_client:
            registration:
              provider: spring
              client-id: mgt_api_client
              client-secret: "{noop}mgt_api_client"
              authorization-grant-types: 
                - client_credentials
              client-authentication-methods:
                - client_secret_basic
              scopes: 
                - openid
                - profile
                - rabbitmq.tag:management
                - rabbitmq.tag:administrator
              client-name: mgt_api_client            
          rabbitmq_client_code_opaque:
            registration:
              provider: spring
              client-id: rabbitmq_client_code_opaque
              client-secret: "{noop}rabbitmq_client_code_opaque"
              require-proof-key: true              
              authorization-grant-types: 
                - authorization_code
              client-authentication-methods:
                - none
              redirect-uris: 
                - "${RABBITMQ_SCHEME}://${RABBITMQ_HOST}${RABBITMQ_PATH}/js/oidc-oauth/login-callback.html"
              post-logout-redirect-uris:
                - "${RABBITMQ_SCHEME}://${RABBITMQ_HOST}${RABBITMQ_PATH}/"
              scopes: 
                - openid 
                - profile                 
              client-name: rabbitmq_client_code_opaque
            token:
              access-token-format: reference
          rabbitmq_client_code:
            registration:
              provider: spring
              client-id: rabbitmq_client_code
              require-proof-key: true              
              authorization-grant-types: 
                - authorization_code
              client-authentication-methods:
                - none
              redirect-uris: 
                - "${RABBITMQ_SCHEME}://${RABBITMQ_HOST}${RABBITMQ_PATH}/js/oidc-oauth/login-callback.html"
              post-logout-redirect-uris:
                - "${RABBITMQ_SCHEME}://${RABBITMQ_HOST}${RABBITMQ_PATH}/"
              scopes: 
                - openid 
                - profile                
              client-name: rabbitmq_client_code
              